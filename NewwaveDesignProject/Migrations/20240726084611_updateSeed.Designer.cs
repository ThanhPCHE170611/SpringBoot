// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NewwaveDesignProject.Cores.MVVM.Data;

#nullable disable

namespace NewwaveDesignProject.Migrations
{
    [DbContext(typeof(DashBankDbContext))]
    [Migration("20240726084611_updateSeed")]
    partial class updateSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.7");

            modelBuilder.Entity("NewwaveDesignProject.Cores.MVVM.Models.Bank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Banks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "DBL Bank"
                        },
                        new
                        {
                            Id = 2,
                            Name = "BRC Bank"
                        },
                        new
                        {
                            Id = 3,
                            Name = "ABM Bank"
                        },
                        new
                        {
                            Id = 4,
                            Name = "MCB Bank"
                        });
                });

            modelBuilder.Entity("NewwaveDesignProject.Cores.MVVM.Models.BankService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BankId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("FifthText")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstText")
                        .HasColumnType("TEXT");

                    b.Property<string>("FourthText")
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .HasColumnType("TEXT");

                    b.Property<string>("SecondText")
                        .HasColumnType("TEXT");

                    b.Property<string>("ServiceName")
                        .HasColumnType("TEXT");

                    b.Property<string>("SixthText")
                        .HasColumnType("TEXT");

                    b.Property<string>("Slogan")
                        .HasColumnType("TEXT");

                    b.Property<string>("ThirdText")
                        .HasColumnType("TEXT");

                    b.Property<int>("UsageCount")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("BankId");

                    b.ToTable("BankServices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BankId = 1,
                            Description = "It is a long established",
                            FifthText = "Lorem Ipsum",
                            FirstText = "Lorem Ipsum",
                            FourthText = "Many publishing",
                            Image = "LifeInsuranceServices.png",
                            SecondText = "Many publishing",
                            ServiceName = "Life Insurance",
                            SixthText = "Many publishing",
                            Slogan = "Unlimited protection",
                            ThirdText = "Lorem Ipsum",
                            UsageCount = 100
                        },
                        new
                        {
                            Id = 2,
                            BankId = 1,
                            Description = "It is a long established",
                            FifthText = "Lorem Ipsum",
                            FirstText = "Lorem Ipsum",
                            FourthText = "Many publishing",
                            Image = "ShoppingServices.png",
                            SecondText = "Many publishing",
                            ServiceName = "Shopping",
                            SixthText = "Many publishing",
                            Slogan = "Buy. Think. Grow.",
                            ThirdText = "Lorem Ipsum",
                            UsageCount = 99
                        },
                        new
                        {
                            Id = 3,
                            BankId = 1,
                            Description = "It is a long established",
                            FifthText = "Lorem Ipsum",
                            FirstText = "Lorem Ipsum",
                            FourthText = "Many publishing",
                            Image = "SafetyServices.png",
                            SecondText = "Many publishing",
                            ServiceName = "Safety",
                            SixthText = "Many publishing",
                            Slogan = "We are your allies.",
                            ThirdText = "Lorem Ipsum",
                            UsageCount = 98
                        },
                        new
                        {
                            Id = 4,
                            BankId = 1,
                            Description = "It is a long established",
                            FifthText = "Lorem Ipsum",
                            FirstText = "Lorem Ipsum",
                            FourthText = "Many publishing",
                            Image = "Loan.png",
                            SecondText = "Many publishing",
                            ServiceName = "Bussiness loans",
                            SixthText = "Many publishing",
                            Slogan = "Unlimited protection",
                            ThirdText = "Lorem Ipsum",
                            UsageCount = 10
                        },
                        new
                        {
                            Id = 5,
                            BankId = 1,
                            Description = "It is a long established",
                            FifthText = "Lorem Ipsum",
                            FirstText = "Lorem Ipsum",
                            FourthText = "Many publishing",
                            Image = "Loan.png",
                            SecondText = "Many publishing",
                            ServiceName = "Shopping",
                            SixthText = "Many publishing",
                            Slogan = "Buy. Think. Grow.",
                            ThirdText = "Lorem Ipsum",
                            UsageCount = 9
                        },
                        new
                        {
                            Id = 6,
                            BankId = 1,
                            Description = "It is a long established",
                            FifthText = "Lorem Ipsum",
                            FirstText = "Lorem Ipsum",
                            FourthText = "Many publishing",
                            Image = "Loan.png",
                            SecondText = "Many publishing",
                            ServiceName = "Safety",
                            SixthText = "Many publishing",
                            Slogan = "We are your allies.",
                            ThirdText = "Lorem Ipsum",
                            UsageCount = 8
                        },
                        new
                        {
                            Id = 7,
                            BankId = 1,
                            Description = "It is a long established",
                            FifthText = "Lorem Ipsum",
                            FirstText = "Lorem Ipsum",
                            FourthText = "Many publishing",
                            Image = "Loan.png",
                            SecondText = "Many publishing",
                            ServiceName = "Life Insurance",
                            SixthText = "Many publishing",
                            Slogan = "Unlimited protection",
                            ThirdText = "Lorem Ipsum",
                            UsageCount = 7
                        },
                        new
                        {
                            Id = 8,
                            BankId = 1,
                            Description = "It is a long established",
                            FifthText = "Lorem Ipsum",
                            FirstText = "Lorem Ipsum",
                            FourthText = "Many publishing",
                            Image = "Loan.png",
                            SecondText = "Many publishing",
                            ServiceName = "Shopping",
                            SixthText = "Many publishing",
                            Slogan = "Buy. Think. Grow.",
                            ThirdText = "Lorem Ipsum",
                            UsageCount = 6
                        },
                        new
                        {
                            Id = 9,
                            BankId = 1,
                            Description = "It is a long established",
                            FifthText = "Lorem Ipsum",
                            FirstText = "Lorem Ipsum",
                            FourthText = "Many publishing",
                            Image = "Loan.png",
                            SecondText = "Many publishing",
                            ServiceName = "Safety",
                            SixthText = "Many publishing",
                            Slogan = "We are your allies.",
                            ThirdText = "Lorem Ipsum",
                            UsageCount = 5
                        });
                });

            modelBuilder.Entity("NewwaveDesignProject.Cores.MVVM.Models.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Balance")
                        .HasColumnType("TEXT");

                    b.Property<int>("BankId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CardTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ChipImage")
                        .HasColumnType("TEXT");

                    b.Property<string>("Holder")
                        .HasColumnType("TEXT");

                    b.Property<string>("Icon")
                        .HasColumnType("TEXT");

                    b.Property<string>("Logo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Number")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ValidThru")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BankId");

                    b.HasIndex("CardTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("Cards");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Balance = 1500.00m,
                            BankId = 1,
                            CardTypeId = 1,
                            ChipImage = "ChipCard.png",
                            Holder = "John Doe",
                            Icon = "CreditCardBlue.png",
                            Logo = "Ellipse.png",
                            Number = "12345678512345678",
                            UserId = 1,
                            ValidThru = new DateTime(2025, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Balance = 1500.00m,
                            BankId = 1,
                            CardTypeId = 1,
                            ChipImage = "ChipCard.png",
                            Holder = "Dinh Dien",
                            Icon = "CreditCardBlue.png",
                            Logo = "Ellipse.png",
                            Number = "12354567812345678",
                            UserId = 1,
                            ValidThru = new DateTime(2025, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Balance = 2500.00m,
                            BankId = 2,
                            CardTypeId = 1,
                            ChipImage = "ChipCard.png",
                            Holder = "Jane Smith",
                            Icon = "CreditCardGold.png",
                            Logo = "Ellipse.png",
                            Number = "23458678923456789",
                            UserId = 1,
                            ValidThru = new DateTime(2024, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            Balance = 3000.00m,
                            BankId = 3,
                            CardTypeId = 1,
                            ChipImage = "ChipCard.png",
                            Holder = "Alice Johnson",
                            Icon = "CreditCardPink.png",
                            Logo = "EllipseGray.png",
                            Number = "34567893034567890",
                            UserId = 1,
                            ValidThru = new DateTime(2026, 10, 31, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            Balance = 3000.00m,
                            BankId = 4,
                            CardTypeId = 1,
                            ChipImage = "ChipCard.png",
                            Holder = "Dinh Khang",
                            Icon = "CreditCardPink.png",
                            Logo = "EllipseGray.png",
                            Number = "34564789034567890",
                            UserId = 1,
                            ValidThru = new DateTime(2026, 10, 31, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            Balance = 3000.00m,
                            BankId = 2,
                            CardTypeId = 1,
                            ChipImage = "ChipCard.png",
                            Holder = "Dinh Trang",
                            Icon = "CreditCardPink.png",
                            Logo = "EllipseGray.png",
                            Number = "34567890534567890",
                            UserId = 1,
                            ValidThru = new DateTime(2026, 10, 31, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("NewwaveDesignProject.Cores.MVVM.Models.CardService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CardId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .HasColumnType("TEXT");

                    b.Property<string>("Icon")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.ToTable("CardServices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CardId = 1,
                            Content = "The most widely accepted credit card.",
                            Icon = "AppleIcon.png",
                            Title = "Visa Card"
                        },
                        new
                        {
                            Id = 2,
                            CardId = 1,
                            Content = "A global payment solutions provider.",
                            Icon = "AppleIcon.png",
                            Title = "BlockCard.png"
                        },
                        new
                        {
                            Id = 3,
                            CardId = 1,
                            Content = "Known for premium services and rewards.",
                            Icon = "BlockCard.png",
                            Title = "American Express"
                        },
                        new
                        {
                            Id = 4,
                            CardId = 1,
                            Content = "Known for premium services and rewards.",
                            Icon = "ChangePinCode.png",
                            Title = "American Express"
                        },
                        new
                        {
                            Id = 5,
                            CardId = 1,
                            Content = "Known for premium services and rewards.",
                            Icon = "Gooogle.png",
                            Title = "American Express"
                        });
                });

            modelBuilder.Entity("NewwaveDesignProject.Cores.MVVM.Models.CardType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CardTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Visa"
                        },
                        new
                        {
                            Id = 2,
                            Name = "MasterCard"
                        },
                        new
                        {
                            Id = 3,
                            Name = "American Express"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Discover"
                        },
                        new
                        {
                            Id = 5,
                            Name = "JCB"
                        });
                });

            modelBuilder.Entity("NewwaveDesignProject.Cores.MVVM.Models.Investment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<int>("CardId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StockId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.HasIndex("StockId");

                    b.ToTable("Investments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 54000m,
                            CardId = 1,
                            StockId = 1
                        },
                        new
                        {
                            Id = 2,
                            Amount = 25000m,
                            CardId = 1,
                            StockId = 2
                        },
                        new
                        {
                            Id = 3,
                            Amount = 8200m,
                            CardId = 1,
                            StockId = 3
                        });
                });

            modelBuilder.Entity("NewwaveDesignProject.Cores.MVVM.Models.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<int>("CardId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Icon")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.ToTable("Invoices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 450m,
                            CardId = 1,
                            Date = new DateTime(2021, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Icon = "apple.png",
                            Status = 1,
                            UserName = "Apple Store"
                        },
                        new
                        {
                            Id = 2,
                            Amount = 160m,
                            CardId = 1,
                            Date = new DateTime(2021, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Icon = "user2.png",
                            Status = 1,
                            UserName = "Michael"
                        },
                        new
                        {
                            Id = 3,
                            Amount = 1085m,
                            CardId = 1,
                            Date = new DateTime(2021, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Icon = "playstation.png",
                            Status = 1,
                            UserName = "Play Station"
                        },
                        new
                        {
                            Id = 4,
                            Amount = 90m,
                            CardId = 1,
                            Date = new DateTime(2021, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Icon = "user1.png",
                            Status = 1,
                            UserName = "Willam"
                        },
                        new
                        {
                            Id = 5,
                            Amount = 50m,
                            CardId = 2,
                            Date = new DateTime(2021, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Icon = "user1.png",
                            Status = 1,
                            UserName = "Willam"
                        },
                        new
                        {
                            Id = 6,
                            Amount = 120m,
                            CardId = 3,
                            Date = new DateTime(2021, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Icon = "user1.png",
                            Status = 1,
                            UserName = "Willam"
                        },
                        new
                        {
                            Id = 7,
                            Amount = 150m,
                            CardId = 4,
                            Date = new DateTime(2021, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Icon = "user1.png",
                            Status = 1,
                            UserName = "Willam"
                        });
                });

            modelBuilder.Entity("NewwaveDesignProject.Cores.MVVM.Models.Loan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CardId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Duration")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Instalment")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Interest")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("LoanMoney")
                        .HasColumnType("TEXT");

                    b.Property<int>("LoanTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("RepayMoney")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.HasIndex("LoanTypeId");

                    b.ToTable("Loans");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CardId = 1,
                            Duration = 12,
                            Instalment = 1000.00m,
                            Interest = 0.05m,
                            LoanMoney = 10000.00m,
                            LoanTypeId = 1,
                            RepayMoney = 12000.00m
                        },
                        new
                        {
                            Id = 2,
                            CardId = 1,
                            Duration = 24,
                            Instalment = 1000.00m,
                            Interest = 0.06m,
                            LoanMoney = 20000.00m,
                            LoanTypeId = 2,
                            RepayMoney = 24000.00m
                        },
                        new
                        {
                            Id = 3,
                            CardId = 1,
                            Duration = 36,
                            Instalment = 1000.00m,
                            Interest = 0.07m,
                            LoanMoney = 30000.00m,
                            LoanTypeId = 1,
                            RepayMoney = 36000.00m
                        },
                        new
                        {
                            Id = 4,
                            CardId = 1,
                            Duration = 48,
                            Instalment = 1000.00m,
                            Interest = 0.08m,
                            LoanMoney = 40000.00m,
                            LoanTypeId = 1,
                            RepayMoney = 48000.00m
                        },
                        new
                        {
                            Id = 5,
                            CardId = 1,
                            Duration = 60,
                            Instalment = 1000.00m,
                            Interest = 0.09m,
                            LoanMoney = 50000.00m,
                            LoanTypeId = 2,
                            RepayMoney = 60000.00m
                        },
                        new
                        {
                            Id = 6,
                            CardId = 1,
                            Duration = 72,
                            Instalment = 1000.00m,
                            Interest = 0.1m,
                            LoanMoney = 60000.00m,
                            LoanTypeId = 2,
                            RepayMoney = 72000.00m
                        },
                        new
                        {
                            Id = 7,
                            CardId = 1,
                            Duration = 84,
                            Instalment = 1000.00m,
                            Interest = 0.11m,
                            LoanMoney = 70000.00m,
                            LoanTypeId = 1,
                            RepayMoney = 84000.00m
                        },
                        new
                        {
                            Id = 8,
                            CardId = 1,
                            Duration = 96,
                            Instalment = 1000.00m,
                            Interest = 0.12m,
                            LoanMoney = 80000.00m,
                            LoanTypeId = 2,
                            RepayMoney = 96000.00m
                        });
                });

            modelBuilder.Entity("NewwaveDesignProject.Cores.MVVM.Models.LoanType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Icon")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("LoanTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "$50,000",
                            Icon = "User.png",
                            Name = "Personal Loan"
                        },
                        new
                        {
                            Id = 2,
                            Description = "$100,000",
                            Icon = "Bag.png",
                            Name = "Corporate Loans"
                        },
                        new
                        {
                            Id = 3,
                            Description = "$500,000",
                            Icon = "Support.png",
                            Name = "Business Loans"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Chose Money",
                            Icon = "Setting.png",
                            Name = "Custom Loans"
                        });
                });

            modelBuilder.Entity("NewwaveDesignProject.Cores.MVVM.Models.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Logo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ReturnValue")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Stocks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "E-commerce, Marketplace",
                            Logo = "apple.png",
                            Name = "Trivago",
                            Price = 520m,
                            ReturnValue = 5m
                        },
                        new
                        {
                            Id = 2,
                            Description = "E-commerce, Marketplace",
                            Logo = "google.png",
                            Name = "Samsung Mobile",
                            Price = 740m,
                            ReturnValue = 5m
                        },
                        new
                        {
                            Id = 3,
                            Description = "E-commerce, Marketplace",
                            Logo = "apple.png",
                            Name = "Trivago",
                            Price = 200m,
                            ReturnValue = -3m
                        },
                        new
                        {
                            Id = 4,
                            Description = "E-commerce, Marketplace",
                            Logo = "apple.png",
                            Name = "Trivago",
                            Price = 240m,
                            ReturnValue = 2m
                        },
                        new
                        {
                            Id = 5,
                            Description = "E-commerce, Marketplace",
                            Logo = "apple.png",
                            Name = "Trivago",
                            Price = 670m,
                            ReturnValue = -12m
                        });
                });

            modelBuilder.Entity("NewwaveDesignProject.Cores.MVVM.Models.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageType")
                        .HasColumnType("TEXT");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Status")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.ToTable("Transactions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = -150m,
                            Date = new DateTime(2021, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Spotify Subscription",
                            ImageType = "bell.png",
                            InvoiceId = 1,
                            Status = "Pending",
                            Type = "Shopping"
                        },
                        new
                        {
                            Id = 2,
                            Amount = -340m,
                            Date = new DateTime(2021, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Apple Store",
                            ImageType = "settings.png",
                            InvoiceId = 2,
                            Status = "Completed",
                            Type = "Service"
                        },
                        new
                        {
                            Id = 3,
                            Amount = 780m,
                            Date = new DateTime(2021, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Apple Store",
                            ImageType = "user1.png",
                            InvoiceId = 2,
                            Status = "Completed",
                            Type = "Transfer"
                        });
                });

            modelBuilder.Entity("NewwaveDesignProject.Cores.MVVM.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Avatar")
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .HasColumnType("TEXT");

                    b.Property<string>("Currency")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("FullName")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsReceiveDigitalCurrency")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsReceiveMerchantOrder")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsRecommendation")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsTwoFactorAuthentication")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<string>("PermanentAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("PostalCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("PresentAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("TimeZone")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Avatar = "userAvatar.png",
                            City = "San Jose",
                            Country = "USA",
                            Currency = "USD",
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "charlenereed@gmail.com",
                            FullName = "Charlene Reed",
                            IsReceiveDigitalCurrency = true,
                            IsReceiveMerchantOrder = false,
                            IsRecommendation = true,
                            IsTwoFactorAuthentication = true,
                            Password = "123456",
                            PermanentAddress = "San Jose, California, USA",
                            PostalCode = "45962",
                            PresentAddress = "San Jose, California, USA",
                            TimeZone = "(GMT-12:00) International Date Line West",
                            UserName = "Charlene Reed"
                        });
                });

            modelBuilder.Entity("NewwaveDesignProject.Cores.MVVM.Models.Bank", b =>
                {
                    b.HasOne("NewwaveDesignProject.Cores.MVVM.Models.User", null)
                        .WithMany("Banks")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("NewwaveDesignProject.Cores.MVVM.Models.BankService", b =>
                {
                    b.HasOne("NewwaveDesignProject.Cores.MVVM.Models.Bank", "Bank")
                        .WithMany()
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bank");
                });

            modelBuilder.Entity("NewwaveDesignProject.Cores.MVVM.Models.Card", b =>
                {
                    b.HasOne("NewwaveDesignProject.Cores.MVVM.Models.Bank", "Bank")
                        .WithMany("Cards")
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewwaveDesignProject.Cores.MVVM.Models.CardType", "CardType")
                        .WithMany("Cards")
                        .HasForeignKey("CardTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewwaveDesignProject.Cores.MVVM.Models.User", "User")
                        .WithMany("Cards")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bank");

                    b.Navigation("CardType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("NewwaveDesignProject.Cores.MVVM.Models.CardService", b =>
                {
                    b.HasOne("NewwaveDesignProject.Cores.MVVM.Models.Card", "Card")
                        .WithMany("CardServices")
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Card");
                });

            modelBuilder.Entity("NewwaveDesignProject.Cores.MVVM.Models.Investment", b =>
                {
                    b.HasOne("NewwaveDesignProject.Cores.MVVM.Models.Card", "Card")
                        .WithMany("Investments")
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewwaveDesignProject.Cores.MVVM.Models.Stock", "Stock")
                        .WithMany("Investments")
                        .HasForeignKey("StockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Card");

                    b.Navigation("Stock");
                });

            modelBuilder.Entity("NewwaveDesignProject.Cores.MVVM.Models.Invoice", b =>
                {
                    b.HasOne("NewwaveDesignProject.Cores.MVVM.Models.Card", "Card")
                        .WithMany("Invoices")
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Card");
                });

            modelBuilder.Entity("NewwaveDesignProject.Cores.MVVM.Models.Loan", b =>
                {
                    b.HasOne("NewwaveDesignProject.Cores.MVVM.Models.Card", "Card")
                        .WithMany("Loans")
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewwaveDesignProject.Cores.MVVM.Models.LoanType", "LoanType")
                        .WithMany("Loans")
                        .HasForeignKey("LoanTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Card");

                    b.Navigation("LoanType");
                });

            modelBuilder.Entity("NewwaveDesignProject.Cores.MVVM.Models.Transaction", b =>
                {
                    b.HasOne("NewwaveDesignProject.Cores.MVVM.Models.Invoice", "Invoice")
                        .WithMany("Transactions")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("NewwaveDesignProject.Cores.MVVM.Models.Bank", b =>
                {
                    b.Navigation("Cards");
                });

            modelBuilder.Entity("NewwaveDesignProject.Cores.MVVM.Models.Card", b =>
                {
                    b.Navigation("CardServices");

                    b.Navigation("Investments");

                    b.Navigation("Invoices");

                    b.Navigation("Loans");
                });

            modelBuilder.Entity("NewwaveDesignProject.Cores.MVVM.Models.CardType", b =>
                {
                    b.Navigation("Cards");
                });

            modelBuilder.Entity("NewwaveDesignProject.Cores.MVVM.Models.Invoice", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("NewwaveDesignProject.Cores.MVVM.Models.LoanType", b =>
                {
                    b.Navigation("Loans");
                });

            modelBuilder.Entity("NewwaveDesignProject.Cores.MVVM.Models.Stock", b =>
                {
                    b.Navigation("Investments");
                });

            modelBuilder.Entity("NewwaveDesignProject.Cores.MVVM.Models.User", b =>
                {
                    b.Navigation("Banks");

                    b.Navigation("Cards");
                });
#pragma warning restore 612, 618
        }
    }
}
